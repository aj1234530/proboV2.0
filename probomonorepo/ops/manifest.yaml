# exp-server depl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: express-server-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: express-server
  template:
    metadata:
      labels:
        app: express-server
    spec:
      containers:
        - name: express-server
          image: aj942/express_server
          imagePullPolicy: Always
          ports:
            - containerPort: 5001

---
# exp Server Service
apiVersion: v1
kind: Service
metadata:
  name: express-server-service
  namespace: default
spec:
  selector:
    app: express-server
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
  type: ClusterIP

---
# Ws Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-server-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ws-server
  template:
    metadata:
      labels:
        app: ws-server
    spec:
      containers:
        - name: ws-server
          image: aj942/ws
          imagePullPolicy: Always
          ports:
            - containerPort: 8080

---
# ws Service
apiVersion: v1
kind: Service
metadata:
  name: ws-server-service
  namespace: default
spec:
  selector:
    app: ws-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
# Worker d
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
        - name: worker
          image: aj942/worker
          imagePullPolicy: Always
          workingDir: /app/apps/worker/src
          ports:
            - containerPort: 80
          env:
            - name: JWT_SECRET
              value: password_nextauth
            - name: WS_URL
              value: ws://ws-server-service:80

---
# Worker s
apiVersion: v1
kind: Service
metadata:
  name: worker-service
  namespace: default
spec:
  selector:
    app: worker
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
# fd
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: aj942/frontend
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          # workingDir: /app/apps/frontend/
          env:
            - name: NEXTAUTH_URL
              value: http://trade.abhi-jay.in/
            - name: NEXTAUTH_SECRET
              value: password_nextauth
            - name: NEXT_PUBLIC_API_URL
              value: http://express-server-service:5001
            - name: NEXT_PUBLIC_API_URL_V1
              value: http://express-server-service:5001/api/v1
            - name: NEXT_PUBLIC_WS_URL
              value: ws://ws-server-service:8080
---
# Frontend Service (Handled by ing
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: default
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80 # will be exposed by ingress
      targetPort: 3000 #on which the cont. is runnnign
  type: ClusterIP # as the ingress is handling the ext acces, so it is fine

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: probo-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: ws-server-service
spec:
  ingressClassName: nginx
  rules:
    - host: trade.abhi-jay.in # ip based
      http:
        paths:
          # - path: /
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: express-server-service
          #       port:
          #         number: 80

          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          - path: /api/auth/signin/
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          # - path: /
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: ws-server-service
          #       port:
          #         number: 80
